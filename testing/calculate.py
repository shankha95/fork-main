#!/bin/python3

import sys
import statistics
import numpy as np

# Read data from stdin and convert to milliseconds (ns to ms)
# data = [int(line) / 1_000_000 for line in sys.stdin]

# # ssl m1
# data = [
# 3.10 - 2.1072,
# 3.01 - 2.1072,
# 3.37 - 2.1072,
# 2.99 - 2.1072,
# 3.04 - 2.1072,
# 4.22 - 2.1072,
# 3.24 - 2.1072,
# 3.71 - 2.1072,
# 3.18 - 2.1072,
# 3.61 - 2.1072,
# 3.26 - 2.1072,
# 3.53 - 2.1072,
# 2.68 - 2.1072,
# ]

# # sml m1
# data = [
# 5.01 - 2.1072,
# 4.71 - 2.1072,
# 4.99 - 2.1072,
# 4.67 - 2.1072,
# 4.63 - 2.1072,
# 4.84 - 2.1072,
# 4.72 - 2.1072,
# 4.74 - 2.1072,
# 4.52 - 2.1072,
# 5.49 - 2.1072,
# 4.23 - 2.1072,
# 4.57 - 2.1072,
# ]
# # sml m2
# data = [
# 2.38 - 2.1072,
# 3.00 - 2.1072,
# 2.81 - 2.1072,
# 3.57 - 2.1072,
# 2.46 - 2.1072,
# 2.92 - 2.1072,
# 2.58 - 2.1072,
# 2.90 - 2.1072,
# 2.47 - 2.1072,
# 3.10 - 2.1072,
# 2.71 - 2.1072,
# 2.69 - 2.1072,
# ]

# # msl m1
# data = [
# 4.70 - 2.1072,
# 5.65 - 2.1072,
# 5.16 - 2.1072,
# 4.60 - 2.1072,
# 4.83 - 2.1072,
# 4.93 - 2.1072,
# 4.84 - 2.1072,
# 4.59 - 2.1072,
# 5.18 - 2.1072,
# 4.44 - 2.1072,
# 5.32 - 2.1072,
# 4.81 - 2.1072,
# 3.00 - 2.1072,
# ]

# # mml m1
# data = [
#  8.65 - 2.1072,
# 10.25 - 2.1072,
# 10.41 - 2.1072,
# 10.07 - 2.1072,
# 10.88 - 2.1072,
# 10.23 - 2.1072,
# 10.15 - 2.1072,
# 10.05 - 2.1072,
#  9.87 - 2.1072,
# 10.34 - 2.1072,
#  9.42 - 2.1072,
#  9.76 - 2.1072,
# ]
# # mml m2
# data = [
# 3.04 - 2.1072,
# 3.13 - 2.1072,
# 3.04 - 2.1072,
# 2.39 - 2.1072,
# 3.63 - 2.1072,
# 2.67 - 2.1072,
# 3.06 - 2.1072,
# 2.82 - 2.1072,
# 3.85 - 2.1072,
# 2.74 - 2.1072,
# 3.03 - 2.1072,
# 3.34 - 2.1072,
# ]

# # ssh m1
# data = [
# 14.83 - 2.1072,
# 17.01 - 2.1072,
# 17.26 - 2.1072,
# 17.40 - 2.1072,
# 17.80 - 2.1072,
# 17.13 - 2.1072,
# 17.91 - 2.1072,
# 17.40 - 2.1072,
# 17.40 - 2.1072,
# 17.15 - 2.1072,
# 17.29 - 2.1072,
# 17.40 - 2.1072,
# ]

# # smh m1
# data = [
# 3.49 - 2.1072,
# 4.82 - 2.1072,
# 4.49 - 2.1072,
# 4.27 - 2.1072,
# 5.13 - 2.1072,
# 4.47 - 2.1072,
# 4.66 - 2.1072,
# 5.00 - 2.1072,
# 5.67 - 2.1072,
# 4.45 - 2.1072,
# 4.50 - 2.1072,
# 4.63 - 2.1072,
# ]
# # smh m2
# data = [
# 14.69 - 2.1072,
# 16.11 - 2.1072,
# 16.33 - 2.1072,
# 15.77 - 2.1072,
# 15.95 - 2.1072,
# 16.45 - 2.1072,
# 15.94 - 2.1072,
# 15.99 - 2.1072,
# 15.78 - 2.1072,
# 16.96 - 2.1072,
# 15.94 - 2.1072,
# 16.19 - 2.1072,
# ]

# # msh m1
# data = [
# 39.08 - 2.1072,
# 49.43 - 2.1072,
# 49.48 - 2.1072,
# 48.98 - 2.1072,
# 48.15 - 2.1072,
# 48.89 - 2.1072,
# 48.22 - 2.1072,
# 46.93 - 2.1072,
# 47.83 - 2.1072,
# 47.97 - 2.1072,
# 47.64 - 2.1072,
# 47.93 - 2.1072,
# ]

# # mmh m1
# data = [
#  8.52 - 2.1072,
# 10.35 - 2.1072,
# 10.02 - 2.1072,
# 10.65 - 2.1072,
# 10.65 - 2.1072,
# 10.40 - 2.1072,
# 10.29 - 2.1072,
# 10.25 - 2.1072,
# 10.06 - 2.1072,
# 10.06 - 2.1072,
# 11.41 - 2.1072,
# 10.52 - 2.1072,
# ]
# mmh m2
data = [
46.26 - 2.1072,
48.11 - 2.1072,
46.08 - 2.1072,
46.38 - 2.1072,
46.29 - 2.1072,
47.56 - 2.1072,
45.67 - 2.1072,
47.08 - 2.1072,
46.25 - 2.1072,
46.20 - 2.1072,
46.17 - 2.1072,
43.57 - 2.1072,
]

# median = statistics.median(data)
# q25 = statistics.quantiles(data, n=4)[0]
# q75 = statistics.quantiles(data, n=4)[2]
# p10 = statistics.quantiles(data, n=10)[0]
# p90 = statistics.quantiles(data, n=10)[8]
median = np.median(data)
q25 = np.percentile(data, 25)
q75 = np.percentile(data, 75)
percentile5 = np.percentile(data, 5)
percentile95 = np.percentile(data, 95)

# Format the results to three decimal places
formatted_median = f"{median:.3f}"
formatted_q25 = f"{q25:.3f}"
formatted_q75 = f"{q75:.3f}"
formatted_p05 = f"{percentile5:.3f}"
formatted_p95 = f"{percentile95:.3f}"

print(f"'whislo': {formatted_p05},")
print(f"'q1'    : {formatted_q25},")
print(f"'med'   : {formatted_median},")
print(f"'q3'    : {formatted_q75},")
print(f"'whishi': {formatted_p95},")


# print(f"10% Percentile: {formatted_p10} ms")
# print(f"25% Quartile: {formatted_q25} ms")
# print(f"Mean: {formatted_mean} ms")
# print(f"75% Quartile: {formatted_q75} ms")
# print(f"90% Percentile: {formatted_p90} ms")
